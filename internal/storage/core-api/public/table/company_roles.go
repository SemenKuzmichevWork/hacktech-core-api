//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CompanyRoles = newCompanyRolesTable("public", "company_roles", "")

type companyRolesTable struct {
	postgres.Table

	// Columns
	RoleName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CompanyRolesTable struct {
	companyRolesTable

	EXCLUDED companyRolesTable
}

// AS creates new CompanyRolesTable with assigned alias
func (a CompanyRolesTable) AS(alias string) *CompanyRolesTable {
	return newCompanyRolesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CompanyRolesTable with assigned schema name
func (a CompanyRolesTable) FromSchema(schemaName string) *CompanyRolesTable {
	return newCompanyRolesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CompanyRolesTable with assigned table prefix
func (a CompanyRolesTable) WithPrefix(prefix string) *CompanyRolesTable {
	return newCompanyRolesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CompanyRolesTable with assigned table suffix
func (a CompanyRolesTable) WithSuffix(suffix string) *CompanyRolesTable {
	return newCompanyRolesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCompanyRolesTable(schemaName, tableName, alias string) *CompanyRolesTable {
	return &CompanyRolesTable{
		companyRolesTable: newCompanyRolesTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newCompanyRolesTableImpl("", "excluded", ""),
	}
}

func newCompanyRolesTableImpl(schemaName, tableName, alias string) companyRolesTable {
	var (
		RoleNameColumn = postgres.StringColumn("role_name")
		allColumns     = postgres.ColumnList{RoleNameColumn}
		mutableColumns = postgres.ColumnList{}
	)

	return companyRolesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		RoleName: RoleNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}

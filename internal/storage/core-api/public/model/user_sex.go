//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type UserSex string

const (
	UserSex_Female UserSex = "female"
	UserSex_Male   UserSex = "male"
	UserSex_Other  UserSex = "other"
)

var UserSexAllValues = []UserSex{
	UserSex_Female,
	UserSex_Male,
	UserSex_Other,
}

func (e *UserSex) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "female":
		*e = UserSex_Female
	case "male":
		*e = UserSex_Male
	case "other":
		*e = UserSex_Other
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for UserSex enum")
	}

	return nil
}

func (e UserSex) String() string {
	return string(e)
}

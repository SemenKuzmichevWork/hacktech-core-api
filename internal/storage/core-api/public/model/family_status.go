//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type FamilyStatus string

const (
	FamilyStatus_Unknown FamilyStatus = "unknown"
	FamilyStatus_Single  FamilyStatus = "single"
	FamilyStatus_Married FamilyStatus = "married"
)

var FamilyStatusAllValues = []FamilyStatus{
	FamilyStatus_Unknown,
	FamilyStatus_Single,
	FamilyStatus_Married,
}

func (e *FamilyStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "unknown":
		*e = FamilyStatus_Unknown
	case "single":
		*e = FamilyStatus_Single
	case "married":
		*e = FamilyStatus_Married
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for FamilyStatus enum")
	}

	return nil
}

func (e FamilyStatus) String() string {
	return string(e)
}
